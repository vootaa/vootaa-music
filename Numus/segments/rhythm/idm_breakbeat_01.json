{
  "id": "idm_breakbeat_01",
  "name": "IDM Breakbeat",
  "category": "rhythm",
  "sub_type": "breakbeat",
  "version": "1.0",
  "sonic_pi_code": {
    "main_code": "use_bpm 160\n\nlive_loop :idm_break do\n  with_fx :bitcrusher, bits: rrand_i(6, 12), mix: 0.4 do\n    with_fx :reverb, room: 0.6 do\n      # 不规则的Breakbeat模式\n      pattern = [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1]\n      \n      16.times do |i|\n        if pattern[i] == 1\n          sample [:drum_snare_soft, :drum_snare_hard, :elec_snare].choose,\n                 amp: rrand(0.4, 0.7),\n                 rate: rrand(0.9, 1.1)\n        end\n        sleep 0.125\n      end\n    end\n  end\nend",
    "live_loop_name": "idm_break",
    "dependencies": [],
    "setup_code": "use_bpm 160"
  },
  "musical_params": {
    "pattern": [
      1,
      0,
      1,
      1,
      0,
      1,
      0,
      0,
      1,
      0,
      1,
      1,
      1,
      0,
      0,
      1
    ],
    "subdivisions": 16,
    "sample": ":drum_snare_soft, :drum_snare_hard, :elec_snare",
    "amp_range": [
      0.4,
      0.7
    ],
    "effects": {
      "bitcrusher": {
        "bits_range": [
          6,
          12
        ],
        "mix": 0.4
      },
      "reverb": {
        "room": 0.6
      },
      "rate_range": [
        0.9,
        1.1
      ]
    },
    "duration_bars": 2,
    "bpm": 160
  },
  "metadata": {
    "source_file": "SonicPI-Examples-1/IDM_Breakbeat.rb",
    "extraction_date": "2025-10-03T17:55:39.126385",
    "author": null,
    "genre_tags": [
      "idm",
      "breakbeat",
      "glitch",
      "electronic"
    ],
    "mood_tags": [
      "complex",
      "unpredictable",
      "experimental",
      "glitchy"
    ],
    "element_tags": [
      "breakbeat",
      "glitch",
      "irregular",
      "lo-fi"
    ],
    "suitable_sections": [
      "experimental",
      "breakdown",
      "transition"
    ],
    "energy_level": 0.7,
    "complexity": 0.9,
    "car_audio_optimization": {
      "bass_boost": 0.9,
      "mid": 1.2,
      "high": 1.3
    }
  },
  "variations": [
    {
      "pattern_generation": "euclidean"
    },
    {
      "randomization": "controlled"
    }
  ],
  "math_adaptable": true
}